% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S_function.R
\name{S}
\alias{S}
\title{Evaluates a call as if its function was defined in a specified environment}
\usage{
S(call, env = parent.frame(), quote = TRUE)
}
\arguments{
\item{call}{The function call to evaluate.}

\item{env}{The environment where the function is defined. Defaults to
\code{parent.frame}, which makes the defining environment equal to the
current environment.}

\item{quote}{Logical; If \code{TRUE}, substitutes the argument.}
}
\value{
The value of the function call when evaluated in the specified
environment.
}
\description{
When a name is encountered in the body of a function, the search path
for that name is given by the defining (or enclosing) environment of the
function. This is good behaviour, since it allows simple reasoning about how
a function should behave: If two calls to a function defined in a constant
environment \code{e} yield different results, this must be because they are
given different arguments.
}
\details{
Sometimes, a function is defined to make messy code more readable, but is
only intended to be used once. In these cases, you might want to call the
function as if it was defined in the body of the work you're currently
working with. And that is what this function does for you.
}
\examples{
   x = 3
   f = function() x^2
   g = function() {
     x = 10
     S(f())
   }
   g() # Evalutes to 100
   f() # Evalutes to 9
   S(f()) # Evaluates 9
}
