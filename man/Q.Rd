% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Q_function.R
\name{Q}
\alias{Q}
\title{Change default arguments of a closure with a partial call}
\usage{
Q(.call, .quote = TRUE, .force = TRUE, .enclos = NULL)
}
\arguments{
\item{.call}{A call object.}

\item{.quote}{Logical; If \code{TRUE}, quotes the \code{call} argument.}

\item{.force}{Logical; If \code{TRUE}, the arguments in the partial call are
forced.}

\item{.enclos}{The enclosing environment of the function. If \code{NULL}, the
enclosing environment is not changed.}
}
\value{
A new closure.
}
\description{
This function takes a partial call and returns a copy of the function
in the call with default arguments replaced by the arguments in the partial
call.
}
\details{
The enclosing environment of the function is not changed by default, and
changing it will typically break the function. The \code{.force} argument is
set to \code{TRUE} by default, since the function will attempt to evaluate
its default arguments in its enclosing context, where the supplied values are
unlikely to exist.
}
\examples{
   ## Play around with normals.
   dnorm2 = Q(dnorm(mean = 1, sd = 2))
   dnorm2(1) == dnorm(1, mean = 1, sd = 2)
   z = 1
   dnorm3 = Q(dnorm(mean = z, sd = 2))
   dnorm2(1) == dnorm(1, mean = z, sd = 2)

   ## Change plot.default to use type = "l" and lwd = 1.5 as default
   plot.default = Q(plot.default(type = "l"))
   par("lwd" = 1.5)

   ## Automatically add x to plots.


}
